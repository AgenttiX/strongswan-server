connections {
  custom-eap-tls {
    pools = ipv4 #, ipv6

    local {
      auth = pubkey
      certs = cert.pem
      id = LOCAL_ID
    }
    remote {
      auth = eap-tls
      cacerts = cacert.pem
      eap_id = %any
    }
    children {
      custom-net {
        # Tunnel all traffic
        # local_ts = 0.0.0.0/0, ::/0
        # Tunnel selected networks only
        local_ts = LOCAL_TS
        # Highest security supported by Windows clients as of 2023,
        # with the addition of chacha20poly1305 and x25519 and sha384 for other clients
        esp_proposals = chacha20poly1305-aes256gcm16-x25519-ecp384,aes256-sha384-sha256-x25519-ecp384
       }
    }
    # Ensure that IKEv2 is used
    version = 2

    # Enable client-side NAT traversal
    # https://docs.strongswan.org/docs/5.9/features/natTraversal.html
    # encap = yes

    # The "proposals" setting has to match the security settings of the clients configured in
    # windows-scripts/VPN/SecuritySettings.ps1
    # The proposal in this configuration corresponds to the Windows settings as
    # EncryptionMethod-IntegrityCheckMethod-PfsGroup

    # Minimum security settings recommended by:
    # https://directaccess.richardhicks.com/2018/12/10/always-on-vpn-ikev2-security-configuration/
    # proposals = aes128-sha256-modp2048

    # AES-GCM example config, not compatible with Windows clients
    # https://www.strongswan.org/testing/testresults/ikev2-algs/alg-aes-gcm/
    # Using AES-XCBC may not be a good idea for security either
    # https://redmine.pfsense.org/issues/12471
    # proposals = aes256gcm16-aesxcbc-x25519

    # Highest security supported by Windows clients as of 2023, with the addition of chacha20poly1305 and x25519 for other clients
    # The GCM cipher does not work with VPN_profile.ps1 due to a bug in Windows 11,
    # and therefore also the CCM cipher is configured.
    proposals = chacha20poly1305-aes256gcm16-sha384-x25519-ecp384,aes256-sha384-x25519-ecp384
  }
}

pools {
  ipv4 {
    addrs = POOL_IPV4_ADDRS
    dns = POOL_IPV4_DNS
  }
  # ipv6 {
  #   addrs = ...
  # }
}
